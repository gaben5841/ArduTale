#include <Arduboy2.h>
#include <ArduboyPlaytune.h>
Arduboy2 arduboy;
//variables declared
int gamestate = 0;
int health = 20;
int frame = 0;
const int spriteFrame1 = 0;
const int spriteFrame2 = 1;
const int frameUpdates = 30;
int heartX = 32;
int heartY = 32;


//sprites declared
const unsigned char titleScreen[] PROGMEM = {
  0x00, 0x00, 0xf0, 0xf8, 0xfc, 0x00, 0x80, 0xfc, 0xfc, 0xfc, 0x00, 0x00, 0xfc, 0xfc, 0x7c, 0xf8, 0xf0, 0xf8, 0xfc, 0x00, 0x00, 0xfc, 0xfc, 0x1c, 0xbc, 0xfc, 0xf8, 0xf8, 0x00, 0x00, 0xf8, 0xfc, 0xfc, 0x6c, 0x6c, 0x6c, 0x6c, 0x00, 0x00, 0xfc, 0xfc, 0xe4, 0xcc, 0xe4, 0xfc, 0x7c, 0x7c, 0x00, 0x00, 0x18, 0x18, 0x1c, 0xfc, 0xfc, 0xfc, 0x1c, 0x1c, 0x1c, 0x00, 0x00, 0xe0, 0xf8, 0x3c, 0x3c, 0xfc, 0xfc, 0xfc, 0x00, 0x00, 0xf0, 0xf8, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xfc, 0xfc, 0x6c, 0x6c, 0x6c, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0xfc, 0xfc, 0xfc, 0xf8, 0xfc, 0xfc, 0xfc, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x87, 0x87, 0x87, 0x87, 0x87, 0x7, 0x7, 0x7, 0x00, 0x80, 0x87, 0x87, 0x80, 0x00, 0x1, 0x3, 0x7, 0x80, 0x80, 0x87, 0x87, 0x7, 0x7, 0x87, 0x87, 0x00, 0x00, 0x80, 0x83, 0x7, 0x7, 0x87, 0x87, 0x87, 0x87, 0x80, 0x80, 0x7, 0x7, 0x80, 0x80, 0x81, 0x87, 0x87, 0x86, 0x80, 0x00, 0x00, 0x00, 0x00, 0x7, 0x87, 0x87, 0x80, 0x80, 0x80, 0x00, 0x00, 0x7, 0x7, 0x81, 0x81, 0x87, 0x7, 0x7, 0x00, 0x80, 0x87, 0x87, 0x87, 0x87, 0x87, 0x87, 0x7, 0x2, 0x80, 0x80, 0x83, 0x87, 0x87, 0x87, 0x87, 0x7, 0x7, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x81, 0x3, 0x7, 0x3, 0x1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x7f, 0xd, 0xd, 0xf, 0x7, 0x00, 0x00, 0x3f, 0x7f, 0x61, 0x61, 0x7f, 0x3f, 0x00, 0x00, 0x3f, 0x7f, 0x61, 0x61, 0x61, 0x00, 0x00, 0x7f, 0x7f, 0x1e, 0x3f, 0x73, 0x61, 0x00, 0x00, 0x7f, 0x7f, 0x6d, 0x6d, 0x6d, 0x6d, 0x00, 0x00, 0x1, 0x1, 0x7f, 0x7f, 0x1, 0x1, 0x1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x7f, 0x4d, 0x4d, 0x7f, 0x33, 0x00, 0x00, 0x7e, 0x7f, 0x13, 0x7f, 0x7e, 0x00, 0x00, 0x1, 0x1, 0x7f, 0x7f, 0x1, 0x1, 0x1, 0x00, 0x00, 0x1, 0x1, 0x7f, 0x7f, 0x1, 0x1, 0x1, 0x00, 0x00, 0x7f, 0x7f, 0x60, 0x60, 0x60, 0x60, 0x00, 0x00, 0x7f, 0x7f, 0x6d, 0x6d, 0x6d, 0x6d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  
};

const unsigned char PROGMEM arduman[] =
{
// width, height,
24, 28,
// FRAME 00
0x00, 0x00, 0x00, 0xfe, 0xfa, 0x06, 0x66, 0x66, 0x06, 0x06, 0x46, 0x86, 0x86, 0x46, 0x06, 0x06, 0x66, 0x66, 0x06, 0xfa, 0xfe, 0x00, 0x00, 0x00, 
0x70, 0x08, 0x04, 0xff, 0xff, 0xf8, 0x78, 0x78, 0x70, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf8, 0xf8, 0xf8, 0xff, 0xff, 0x04, 0x08, 0x70, 
0x00, 0x00, 0x00, 0xff, 0xf1, 0xf1, 0xca, 0xc4, 0xca, 0xf1, 0xf1, 0xff, 0xff, 0xc7, 0xc7, 0xc7, 0xff, 0xf1, 0xf1, 0xf1, 0xff, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0xfb, 0xda, 0x3f, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 
// FRAME 01
0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x3f, 0xda, 0xfb, 0x00, 0x00, 0x00, 0xc0, 0x20, 0x10, 0xff, 0xff, 0xc0, 0xc3, 0xc3, 0x80, 0x80, 0x82, 0x84, 
0x84, 0x82, 0x80, 0x80, 0xc3, 0xc3, 0xc0, 0xff, 0xff, 0x10, 0x20, 0xc0, 0x01, 0x00, 0x00, 0xff, 0x8f, 0x8f, 0x53, 0x23, 0x53, 0x8f, 0x8f, 0xff, 
0xff, 0x3f, 0x3f, 0x3f, 0xff, 0x8f, 0x8f, 0x8f, 0xff, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x9f, 0x97, 0xff, 0x1e, 0x1e, 0x1e, 0x1f, 0x1f, 0x1f, 
0x1f, 0x1e, 0x1e, 0x1e, 0x1f, 0x1f, 0xff, 0x97, 0x9f, 0x00, 0x00, 0x00,
};



const unsigned char heart[] PROGMEM = {
  0x6, 0xf, 0x1e, 0xf, 0x6, 
};

void setup() {
  // put your setup code here, to run once:
  arduboy.begin();
  arduboy.clear();
  arduboy.setFrameRate(60);
}

void loop() {
  // put your main code here, to run repeatedly:
  if(!arduboy.nextFrame()) {
    return;
  }
  switch(gamestate) {
    case 0:
      //title screen start
      title();
      break;
    case 1:
      //begin game
      game();
      break;
  }
}

void title() {
  arduboy.clear();
  
  arduboy.drawBitmap(0, 0, titleScreen, 128, 32, WHITE);
  arduboy.setCursor(2, 40);
  arduboy.print("PRESS A TO BEGIN");
  arduboy.display();

  if (arduboy.pressed(A_BUTTON)) {
    gamestate++;
  }
}

void game() {
  arduboy.clear();
  updateSprite();
  drawSprite();
  arduboy.print(frame);
  arduboy.drawRect(0, 8, 64, 40, WHITE);
  arduboy.drawBitmap(heartX, heartY, heart, 5, 5, WHITE);
  arduboy.display();

  if (arduboy.pressed(B_BUTTON)) {
    gamestate = 0;
  }
  
  if (arduboy.pressed(RIGHT_BUTTON) && heartX < 58) {
     heartX = heartX + 2;
  }
    
  if (arduboy.pressed(LEFT_BUTTON) && heartX > 2) {
    heartX = heartX - 2;
  }

  if (arduboy.pressed(UP_BUTTON) && heartY > 10) {
    heartY = heartY - 2;
  }

  if (arduboy.pressed(DOWN_BUTTON) && heartY < 42) {
    heartY = heartY + 2;
  }
}

void updateSprite() {
  if (arduboy.everyXFrames(frameUpdates)) {
    
    if (frame < spriteFrame2) {
      frame++;
    } else {
      frame = spriteFrame1;
    }

  }
}

void drawSprite() {
  Sprites::drawSelfMasked(90, 10, arduman, frame);
}
